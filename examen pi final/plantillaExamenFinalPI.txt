const v = "\x1b[32m%s\x1b[0m"; // NO TOCAR
const o = "*".repeat(80) + "\n"; // NO TOCAR
const oo = "*".repeat(25); // NO TOCAR
// Te proveemos la siguiente plantilla que tiene dos partes:
// - Desarrollo de las consignas, donde escribirás el código que responda a los enunciados
// - Ejecución de las consignas, donde ejecutarás los métodos correspondientes mostrando por consola sus resultados
const nombre = "FLORENCIA BAZAN";
const tema = "TEMA 1";

/*******************************/
/* Desarrollo de las consignas */
/*******************************/
const jsonHelper = require("./jsonHelper");
// A
const gestionDePeliculas ={
    // B
    peliculas: jsonHelper.leerJson("peliculas"),
    // C
    listarPeliculas: function(arrPelis) {
        arrPelis.forEach(  (peli) => {      
        let premiada = peli.fuePremiada ?  "premiada": "sin premios";
        console.log(
            `${peli.titulo}, de ${peli.director}. Duración de ${peli.duracion} minutos, ${premiada}(${peli.calificacionIMDB} / 10 en IMDB)`);
        });
    },
    // D
    buscarPorTitulo : function (titulo) {
        return this.peliculas.find((peli)=> peli.titulo === titulo)
    },
    // E
    peliculasPremiadas: function() {
        return this.peliculas.filter((peli)=>peli.fuePremiada);
    },
    // F
    filtrarPorDuracion : function(min, max) {
        return this.peliculas.filter((pelis)=> min <= pelis.duracion && pelis.duracion <= max);
    },
    // G
    ordenarPorCalificacion: function() {
        return this.peliculas.sort((a,b)=> a.calificacionIMDB - b.calificacionIMDB);
    },
    // H
    duracionTotal: function(){
        let duracionTotal = this.peliculas.reduce((acum, peli) => acum + peli.duracion, 0);
        return `La duración de todas las películas sumadas es de ${duracionTotal} minutos`
    },
    // I
    premiarPeliculaPorTitulo: function(titulo){
        let peliPremiada = this.buscarPorTitulo(titulo);
        if (!peliPremiada.fuePremiada){
            peliPremiada.fuePremiada = true
            jsonHelper.escribirJson("peliculas", this.peliculas)
        }
    }
}
/******************************/
/* Ejecución de las consignas */
/******************************/
console.table([{ alumno: nombre, tema: tema }]); // NO MODIFICAR NADA DE ESTA LINEA
//console.log(gestionDePeliculas.peliculas);
console.log(v, "\n" + oo + " .C. Listar");
// Ejecución aquí
gestionDePeliculas.listarPeliculas(gestionDePeliculas.peliculas);
console.log(o);

console.log(v, oo + " .D. Buscar");
// Ejecución aquí
console.log(gestionDePeliculas.buscarPorTitulo("Liebestraum"));
console.log(o);

console.log(v, oo + " .E. Filtrar 1");
// Ejecución aquí
console.log(gestionDePeliculas.peliculasPremiadas());
console.log(o);

console.log(v, oo + " .F. Filtrar 2");
// Ejecución aquí
console.log(gestionDePeliculas.filtrarPorDuracion(100,120));
console.log(o);

console.log(v, oo + " .G. Ordenar");
// Ejecución aquí
console.log(gestionDePeliculas.ordenarPorCalificacion());
console.log(o);

console.log(v, oo + " .H. Duracion");
// Ejecución aquí
console.log(gestionDePeliculas.duracionTotal());
console.log(o);

console.log(v, oo + " .I. Premiar");
// Ejecución aquí
gestionDePeliculas.premiarPeliculaPorTitulo("The Last Lovecraft: Relic of Cthulhu");
console.log(o);
